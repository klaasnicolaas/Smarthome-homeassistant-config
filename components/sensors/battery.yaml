---
#################
# Battery sensors
#################
#
# Z-wave
- platform: template
  sensors:
    zwave_battery_smoke_sensor_begane_grond:
      value_template: '{{ states.zwave.fibaro_smoke_sensor_gang_begane_grond.attributes.battery_level }}'
      friendly_name: Smoke sensor | begane grond
      unit_of_measurement: "%"
      device_class: battery

- platform: template
  sensors:
    zwave_battery_smoke_sensor_slaapkamer_zolder:
      value_template: '{{ states.zwave.fibaro_smoke_sensor_slaapkamer_zolder.attributes.battery_level }}'
      friendly_name: Smoke sensor | slaapkamer zolder
      unit_of_measurement: "%"
      device_class: battery

- platform: template
  sensors:
    zwave_battery_door_sensor_hal_begane_grond:
      value_template: '{{ states.zwave.fibaro_door_sensor_hal_begane_grond.attributes.battery_level }}'
      friendly_name: Door sensor | begane grond
      unit_of_measurement: "%"
      device_class: battery

- platform: template
  sensors:
    zwave_battery_motion_sensor_hal_begane_grond:
      value_template: '{{ states.zwave.fibaro_motion_sensor_hal_begane_grond.attributes.battery_level }}'
      friendly_name: Motion sensor | begane grond
      unit_of_measurement: "%"
      device_class: battery

# Zigbee - Xiaomi
- platform: template
  sensors:
    xiaomi_cube_1_battery:
      value_template: '{{ state_attr("binary_sensor.cube_xiaomi_1","battery_level") }}'
      friendly_name: Xiaomi cube
      unit_of_measurement: "%"
      device_class: battery

- platform: template
  sensors:
    xiaomi_window_sensor_1_battery:
      value_template: '{{ state_attr("binary_sensor.door_window_sensor_xiaomi_1","battery_level") }}'
      friendly_name: Xiaomi window sensor | slaapkamer zolder
      unit_of_measurement: "%"
      device_class: battery

- platform: template
  sensors:
    xiaomi_sensor_1_battery:
      value_template: '{{ state_attr("sensor.temperature_xiaomi_sensor_1","battery_level") }}'
      friendly_name: Xiaomi sensor | badkamer
      unit_of_measurement: "%"
      device_class: battery

- platform: template
  sensors:
    xiaomi_sensor_2_battery:
      value_template: '{{ state_attr("sensor.temperature_xiaomi_sensor_2","battery_level") }}'
      friendly_name: Xiaomi sensor | woonkamer
      unit_of_measurement: "%"
      device_class: battery

# Device Trackers
- platform: template
  sensors:
    # Entity that shows the phone battery percentage
    battery_phone_klaas:
      value_template: '{{ state_attr("device_tracker.2779d988391c7ece","battery_level") | round(0)}}'
      friendly_name: Telefoon batterij | Klaas
      unit_of_measurement: '%'
      device_class: battery
      icon_template: >-
        {% set battery_level = state_attr("device_tracker.2779d988391c7ece","battery_level")|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% set charging = is_state("binary_sensor.phone_battery_increase_klaas","on") %}
        {% set discharging = is_state("binary_sensor.phone_battery_decrease_klaas","on") %}
        {% if battery_level == 'unkown'%}
          mdi:battery-unknown
        {% else %}
          {% if charging %}
            {% if battery_round > 0 %}
              mdi:battery-charging-{{ battery_round }}
            {% else %}
             mdi:battery-charging-outline
            {% endif %}
          {% else %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}
          {% endif %}
        {% endif %}

    # Entity that shows the state of the phone battery
    battery_phone_state_klaas:
      friendly_name: Telefoon batterij status | Klaas
      value_template: >-
        {% set battery_level = state_attr("device_tracker.2779d988391c7ece","battery_level")|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% set charging = is_state("binary_sensor.phone_battery_increase_klaas","on") %}
        {% set discharging = is_state("binary_sensor.phone_battery_decrease_klaas","on") %}
        {% if charging %}
          Opladen
        {% else %}
          {% if battery_round >= 100 %}
            Vol
          {% elif battery_round > 0 %}
            Unplugged
          {% else %}
            Laag
          {% endif %}
        {% endif %}
